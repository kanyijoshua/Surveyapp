@model IEnumerable<Surveyapp.Models.Survey>
@inject UserManager<ApplicationUser> _userManager;

@{
    ViewData["Title"] = "Surveys";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active">
            <a>
                <span>My Surveys </span>
            </a>
        </li>
    </ol>
</nav>

@*<div>
     <a class="btn btn-default btn-sm" data-toggle="modal" data-target="#Setup-new-survey">SetUP new survey</a>
    
    <div id="Setup-new-survey" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" id="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"> new survey setup</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body"></div>
                <div style="alignment: right">
                    @await Html.PartialAsync("~/Views/Surveys/Create.cshtml",new Survey())
                </div>
                <div class="modal-footer"></div>
            </div>
        </div>
    </div>
</div>*@

<p>
    <a asp-action="Create">Create New Survey</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Startdate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.status)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.approvalStatus)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Startdate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.status)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.approvalStatus)
                    </td>
                <td>
                    @if (item.SurveyerId == _userManager.GetUserId(User))
                     {
                    <a asp-action="Edit" asp-route-id="@item.Id" title="Edit @item.name"><i class="fa fa-edit"></i></a><span>|</span>
                    <a asp-action="Details" asp-route-id="@item.Id" title="view @item.name details"><i class="fa fa-eye"></i></a> <span>|</span>
                    <a asp-action="Delete" asp-route-id="@item.Id" title="Delete @item.name"><i class="fa fa-trash"></i></a> <span>|</span>
                    <a asp-controller="SurveyCategories" asp-action="Index" asp-route-id="@item.Id">Survey Subject categories <i class="fa fa-receipt"></i></a>
                    }
                    else
                    {
                        <span></span>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
