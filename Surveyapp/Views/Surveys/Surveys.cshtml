@model IEnumerable<Surveyapp.Models.Survey>
@inject SurveyContext _context
@using System.Text.RegularExpressions;
@using Microsoft.EntityFrameworkCore

@{
    ViewBag.Title = "Available Surveys";
    Layout = "_Layout";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active">
            <a>
                <span>Open Surveys</span>
            </a>
        </li>
    </ol>
</nav>
<h2>Surveys</h2>
@*check if there is available surveys*@
@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Survey @Html.DisplayNameFor(model => model.name)
                </th>
                <th>
                    Availability
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model)
    {
        string dateStatus =null; 
        if (EF.Functions.DateDiffDay(item.Startdate,DateTime.Now)<0)
        {
            dateStatus=Math.Abs(EF.Functions.DateDiffDay(item.Startdate,DateTime.Now))+ " Day(s) left to start";
        }
        if (EF.Functions.DateDiffDay(item.Startdate,DateTime.Now)>0 && EF.Functions.DateDiffDay(DateTime.Now,item.EndDate)>0)
        {
            dateStatus= EF.Functions.DateDiffDay(DateTime.Now,item.EndDate)+" Day(s) left to Expire" ;
        }
        if (EF.Functions.DateDiffDay(DateTime.Now,item.EndDate)<=0)
        {
            dateStatus=" Survey Expired" ;
        }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @dateStatus
                </td>
                <td width="30%">
                @*Check if survey date is available for take*@
                    @if (EF.Functions.DateDiffDay(item.Startdate,DateTime.Now)>0&& EF.Functions.DateDiffDay(DateTime.Now,item.EndDate)>0)
                    {
                        @*if survey is open for anonymous take*@
                        @if (item.status == "Open")
                        {
                            <button class="btn-block btn-sm btn btn-secondary" data-toggle="collapse" data-target="#@Regex.Replace(item.name, @"\s", "")" aria-expanded="false" aria-controls="collapseExample">Take Survey</button>
                            <div id="@Regex.Replace(item.name, @"\s", "")" class="collapse" style="width:80%">
                                @if (item.SurveyCategorys.Count > 0)
                                {
                                    <p>Choose Survey Subject categories</p>
                                    <ul style="width:inherit">
                                        @{
                                            var surveyCategory = _context.SurveyCategory.Where(x => x.SurveyId == item.Id).Where(x => x.SurveySubjects.Any(a => a.Questions.Any()));
                                            foreach (var category in surveyCategory)
                                            {
                                                <li><a asp-controller="SurveySubjects" asp-action="SurveySubjects" asp-route-id="@category.Id">@category.CategoryName</a></li>
                                            }
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p>Survey Subject categories Not set</p>
                                }
                            </div>
                        }
                        @*if survey is closed and require login for anonymous take*@
                        @if (item.status == "Closed")
                        {
                            //check if user is logged in
                            if (User.Identity.IsAuthenticated)
                            {
                                <button class="btn-block btn-sm btn btn-secondary" data-toggle="collapse" data-target="#@Regex.Replace(item.name, @"\s", "")" aria-expanded="false" aria-controls="collapseExample">Take Survey</button>
                                <div id="@Regex.Replace(item.name, @"\s", "")" class="collapse" style="width:80%">
                                    @if (item.SurveyCategorys.Count > 0)
                                    {
                                        <p>Choose Survey Subject categories</p>
                                        <ul style="width:inherit">
                                            @{
                                                var surveyCategory = _context.SurveyCategory.Where(x => x.SurveyId == item.Id).Where(x => x.SurveySubjects.Any(a => a.Questions.Any()));
                                                foreach (var category in surveyCategory)
                                                {
                                                    <li><a asp-controller="SurveySubjects" asp-action="SurveySubjects" asp-route-id="@category.Id">@category.CategoryName</a></li>
                                                }
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <p>Survey Subject categories Not set</p>
                                    }

                                </div>
                            }
                            else
                            {
                                <a class="btn-block btn-sm btn btn-danger" asp-area="Identity" asp-page="/Account/Login">take survey <small>(Login required)</small></a>
                            }
                        }
                    }/*else the suveydate has not started or has ended*/
                    else
                    {
                        /*if survey startdate has not been attained*/
                        if (EF.Functions.DateDiffDay(item.Startdate,DateTime.Now)<=0)
                        {
                            <button class="btn btn-sm btn-info" disabled="disabled"> Survey Not open</button>
                        }
                        /*if survey enddate has passed*/
                        if (EF.Functions.DateDiffDay(DateTime.Now,item.EndDate)<=0)
                        {
                            <button class="btn btn-sm btn-info" disabled="disabled"> Survey Expired</button>
                        }
                    }
                    
                </td>
            </tr>
    }
        </tbody>
    </table>
}
else
{
    <h2>No Open Sureys are available</h2>
}

