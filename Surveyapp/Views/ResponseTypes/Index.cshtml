@using System.Collections
@model IEnumerable<Surveyapp.Models.ResponseType>
@inject SurveyContext _context
@inject UserManager<ApplicationUser> _userManager
@using Microsoft.EntityFrameworkCore;
@using System.Linq;

@{
    ViewData["Title"] = "Subject Response Options";
}
<style>
    .select{
      height:20px;
      width:auto;
      overflow:hidden;
      background-color:#FFFFFF;
      border:1px solid #CCCCCC;
      padding:0px;
      margin:0px;
      cursor:pointer;
      border-radius: 5px;
    }
    
    .select:hover{
      height:auto;
    }
    
    .select li{
      height:20px;
      line-height:20px;
      /*padding-left:5px;*/
    }
    .select li p:after{
    background-image: url('https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/down4-24.png');
    }
    .select li:hover{
      background-color:#EEEEFF;
    }
    
    .select li a{
      text-decoration:none;
      color:#000000;
      font-family:calibri;
    }
    
    .select li:first-child a:after{
      content:' ';
      background-size:16px 16px;
      background-position:center center;
      background-repeat:no-repeat;
      float:right;
      height:20px;
      width:auto;
      text-align:center;
      line-height:20px;
    }
</style>
@*
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-action="Index" asp-controller="Surveys">
                <span>My Surveys</span>
            </a>
        </li>
        <li class="breadcrumb-item">
            <a asp-action="Index" asp-controller="SurveyCategories" asp-route-id="@ViewBag.SurveyId">
                <span>Survey Categories</span>
            </a>
        </li>
        <li class="breadcrumb-item">
            <a asp-action="Index" asp-controller="SurveySubjects" asp-route-id="@ViewBag.CategoryId">
                <span>Survey Subject</span>
            </a>
        </li>
        <li class="breadcrumb-item">
            <a asp-action="Index" asp-controller="Questions" asp-route-id="@ViewBag.subjectId">
                <span>Survey Questions</span>
            </a>
        </li>
        <li class="breadcrumb-item active">
            <a>
                <span>Options Types</span>
            </a>
        </li>
    </ol>
</nav>
*@

<a asp-action="Create">Create </a>
@*check if subject has questions b4 adding response option*@
@*
@if (Model.Any())
{
    <a asp-controller="Questions" asp-action="Create" asp-route-id="@ViewBag.subjectId">Add question </a>
    <h3>@ViewBag.SubjectName Options Types</h3>
}
else
{
    <div style="display: flex;">
        <p>
            <a asp-action="Create" asp-route-id="@ViewBag.SubjectId">Create New @ViewBag.SubjectName's Respond Options</a>
        </p>
        $1$if there are respond type on subject category#1#
        @if (ViewBag.otherSubjectOption)
        {
            <h5 style="margin-left: 5px;margin-right: 5px">OR</h5>
            int catgId = int.Parse(ViewBag.CategoryId.ToString());
            var sujbects = _context.ResponseType.Select(x=>new {x.Id,x.ResponseName});
    <div style="margin-left: 10px">
        <div class="dropdown">
            <button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">
                Choose from other subject category Options responses
            </button>
            <div class="dropdown-menu" style="width:100%;background-color:darkgrey">
                @foreach (var suboptions in sujbects)
                {
                    <a class="dropdown-item" asp-action="AssociateResponse" asp-route-subId="@suboptions.Id" asp-route-id="@ViewBag.SubjectId">@suboptions.ResponseName options</a>
                }
            </div>
        </div>
        $1$<ul class="select">
            <li>
                Choose other subject Options responses
                <ul style="list-style: none">
                    <option value="">select subject</option>
                    @foreach (var suboptions in sujbects)
                    {
                        <li ><a asp-action="AssociateResponse" asp-route-subId="@suboptions.Id" asp-route-id="@ViewBag.SubjectId">@suboptions.SubjectName options</a></li>
                    }
                </ul>
            </li>

        </ul>#1#
    </div>
        }
    </div>
    
}
*@

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ResponseName)
        </th>
        <th>
            Response options
            @*@Html.DisplayNameFor(model => model.Subject)*@
        </th>
        <th>
            Created by
        </th>
        <th>Display</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ResponseName)
            </td>
            <td>
                @foreach (var itemed in item.ResponseDictionary)
                {
                    <p>(@itemed.Name) @itemed.Value</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Creator.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DisplayOptionType)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Subject.Id)
            </td>*@
            <td>
                @if (_userManager.GetUserId(User) == item.CreatorId)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" title="Edit @item.ResponseName">
                        <i class="fa fa-edit"></i>
                    </a>
                    <apan>|</apan>
                                    @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                    <a asp-action="Delete" asp-route-id="@item.Id"title="Delete @item.ResponseName">
                        <i class="fa fa-trash"></i>
                    </a>
                }

            </td>
        </tr>
    }
    </tbody>
</table>