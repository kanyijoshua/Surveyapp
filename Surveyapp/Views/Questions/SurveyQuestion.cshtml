@model IEnumerable<Surveyapp.Models.Question>
@inject SurveyContext _context
@inject UserManager<ApplicationUser> _usermanager

@{
    ViewBag.Title = "Survey Questions";
    Layout = "_Layout";
}
<nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-action="Index" asp-controller="Surveys">
                    <span>Surveys</span>
                </a>
            </li>
            <li class="breadcrumb-item">
                <a asp-action="SurveySubjects" asp-controller="SurveySubjects" asp-route-id="@ViewBag.SurveyId">
                    <span>Survey Subjects</span>
                </a>
            </li>
            <li class="breadcrumb-item active">
                <a>
                    <span>Survey Questions</span>
                </a>
            </li>
        </ol>
    </nav>
<h2>@ViewBag.SubjectName Survey Questions</h2>
@*<table class="table">
    <thead>
    <tr>
        <th>fdf</th>
        <th>ds</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.question)
                @foreach(var itemed in item.ResponseType.ResponseDictionary)
                {
                    <label>@itemed.Value 
                        <input type="radio" value="@itemed.Key" required="required"/>
                    </label>
                        $1$<p>@itemed.Value</p>
                        $2$<h1>itemed.Value</h1>#2##1#
                }
            </td>
            <td>
                Submit Survey
                @#1#Html.DisplayFor(modelItem => item.EndDate)#1#
            </td>
        </tr>
    }
    </tbody>
</table>*@
@*if there is questions*@
@if (Model.Any())
{
    @*<div class="row">
        <div class="col-md-8">
            <form asp-controller="SurveyResponses" asp-action="Create" id="SurveyResponses">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @{
                    var quizSerial = 0;
                    var formSubmitBtn=false;
                }
                    @foreach (var item in Model)
                    {
                        /*check if survey is of type open*/
                        if (item.Subject.Category.Survey.status == "Open")
                        {
                            quizSerial++;
                            formSubmitBtn = true;
                            <div class="question-div">
                                <input type="hidden" required="required" name="quizresponse" id="quizresponse"/>
                                <p style="background-color:Lavender;">@quizSerial) @Html.DisplayFor(modelItem => item.question)</p>

                                <div class="container" style="display: flex;margin: 5px">
                                    @foreach (var itemed in item.ResponseType.ResponseDictionary)
                                    {
                                        <div class="form-group" style="margin-left: 15px">
                                            <label class="control-label">@itemed.Value
                                                <input type="radio" name="quize @item.Id" value="@itemed.Key|@item.Id" required="required"/>
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        /*check if survey is of type Closed*/
                        if (item.Subject.Category.Survey.status == "Closed")
                        {
                            //check if user is loged in
                            if (User.Identity.IsAuthenticated)
                            {
                                //check if user has answered the survey question
                                if (!_context.SurveyResponse.Where(x => x.QuestionId == item.Id).Any(x => x.RespondantId == _usermanager.GetUserId(User)))
                                {
                                    quizSerial++;
                                    formSubmitBtn = true;
                                    <div class="question-div">
                                        <input type="hidden" required="required" name="quizresponse" id="quizresponse"/>
                                        <p style="background-color:Lavender;">@quizSerial) @Html.DisplayFor(modelItem => item.question)</p>

                                        <div class="container" style="display: flex;margin: 5px">
                                            @foreach (var itemed in item.ResponseType.ResponseDictionary)
                                            {
                                                <div class="form-group" style="margin-left: 15px">
                                                    <label class="control-label">@itemed.Value
                                                        <input type="radio" name="quize @item.Id" value="@itemed.Key|@item.Id" required="required"/>
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <h3 style="background-color:Lavender;">Survey questions already taken</h3>
                                }

                            }
                            else
                            {
                                <h3 style="background-color:Lavender;">Survey questions require login</h3>
                            }
                        }
                    }
                    @if (formSubmitBtn)
                    {
                        <div class="form-group">
                            <input type="submit" value="Submit Survey" class="btn btn-primary"/>
                        </div>
                    }

            </form>
        </div>
    </div>*@
    
<form asp-controller="SurveyResponses" asp-action="Create" id="SurveyResponses">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table border="0" class="table table-striped table-hover table-bordered display">
        <thead>
        <tr style="height: 5px!important;line-height: 2%;">
            <th colspan="2"></th>
            <th colspan="@Model.Take(1).SelectMany(x=>x.ResponseType.ResponseDictionary).Count()" style="text-align: center;">Response options</th>
        </tr>
        <tr style="height: 5px!important;line-height: 2%;">
            <th>
                SN
            </th>
            <th style="width:60%">
                Question
            </th>
            @foreach (var item in Model.Take(1).SelectMany(x => x.ResponseType.ResponseDictionary))
            {
                <th>@item.Value</th>
            }
        </tr>
        </thead>
        <tbody>
        @{
            var quizSerialTable = 0;
            var formSubmitBtnTable=false;
        }
        @*check if survey is of type open*@
        @if (Model.Any(x => x.Subject.Category.Survey.status == "Open"))
        {
            @foreach (var quiz in Model)
            {
                quizSerialTable++;
                formSubmitBtnTable = true;
                <tr>
                    <input type="hidden" required="required" name="quizresponse" id="quizresponseTable"/>
                    <td >@quizSerialTable</td>
                    <td style="width:60%">@Html.DisplayFor(modelItem => quiz.question)</td>
                    @foreach (var response in quiz.ResponseType.ResponseDictionary)
                    {
                        <td>
                            <input type="radio" class="tableradio" name="quize @quiz.Id" value="@response.Key|@quiz.Id" required="required"/>
                        </td>
                    }
                    
                </tr>
            }
        }
        @*check if survey is of type Closed*@
        @if (Model.Any(x => x.Subject.Category.Survey.status == "Closed"))
        {
            //check if user is loged in
            if (User.Identity.IsAuthenticated)
            {
                @foreach (var quiz in Model)
                 {
                     //check if user has not answered the survey question
                     if (!_context.SurveyResponse.Where(x => x.QuestionId == quiz.Id).Any(x => x.RespondantId == _usermanager.GetUserId(User)))
                     {
                         quizSerialTable++;
                          formSubmitBtnTable = true;
                          <tr>
                              <input type="hidden" required="required" name="quizresponse" id="quizresponseTable"/>
                              <td >@quizSerialTable</td>
                              <td style="width:60%">@Html.DisplayFor(modelItem => quiz.question)</td>
                              @foreach (var response in quiz.ResponseType.ResponseDictionary)
                              {
                                  <td>
                                      <input type="radio" class="tableradio" name="quize @quiz.Id" value="@response.Key|@quiz.Id" required="required"/>
                                  </td>
                              }
                             
                          </tr>
                     }else
                     {
                         <h3 style="background-color:Lavender;">Survey questions already taken</h3>
                     }
                 }
                 
            }else
            {
                <h3 style="background-color:Lavender;">Survey questions require login</h3>
            }
        }
        
        </tbody>
    </table>
    @if (formSubmitBtnTable)
     {
         <div class="form-group">
             <input type="submit" value="Submit Survey" class="btn btn-primary"/>
         </div>
     }
</form>
        <script src="~/lib/jquery/dist/jquery.js"></script>
<script>
$('form input:radio').on('input',function(e) {
    var quizeresponse = $(this).parent().parent().parent().parent().find("#quizresponse");
    quizeresponse.val($(this).val());
  //console.log(quizeresponse.val())
      
})
$('form input:radio.tableradio').on('input',function(e) {
    var quizeresponse = $(this).parent().parent().find("#quizresponseTable");
    quizeresponse.val($(this).val());
      
})
/*$("#SurveyResponses").submit(function(e) {
  e.preventDefault();
  var thisform=this;
  var formDataArray=[];
  var formData = new FormData;
  var formsdata= $('form input:radio').serializeArray();
  $.each(formsdata,function(key,value) {
      formDataArray.push(value.value);
      formsdata.append('array_php_side[]', value.value)
  });
  $("#quizresponse").val((formsdata));
    console.log(($("#quizresponse").val()));
    if ($("#quizresponse").val()!=null) {
        $(thisform).submit();
    }
  
})*/
</script>
}