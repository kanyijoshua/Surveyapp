@model IEnumerable<Surveyapp.Models.Question>
@inject SurveyContext _context
@inject UserManager<ApplicationUser> _usermanager

@{
    ViewBag.Title = "Survey Questions";
    Layout = "_Layout";
    var surveySubject = Model?.FirstOrDefault()?.Subject;
    var newOtherProperties = new Dictionary<int, OtherProperties>();
}
<style>
        .FixedHeader_Cloned{
            background-color:azure
        }
    </style>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-action="Surveys" asp-controller="Surveys">
                <span>Surveys</span>
            </a>
        </li>
        <li class="breadcrumb-item">
            <a asp-action="SurveySubjects" asp-controller="SurveySubjects" asp-route-id="@ViewBag.SurveyId">
                <span>Survey Subjects</span>
            </a>
        </li>
        <li class="breadcrumb-item active">
            <a>
                <span>Survey Questions</span>
            </a>
        </li>
    </ol>
</nav>
@*if there is questions*@
@if (Model!.Any())
{
    var anotherSubjectOnSurveyTake = surveySubject?.AddAnotherSubjectOnSurveyTake == true?"true":"false";
    @*<div class="row">
        <div class="col-md-8">
            <form asp-controller="SurveyResponses" asp-action="Create" id="SurveyResponses">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @{
                    var quizSerial = 0;
                    var formSubmitBtn=false;
                }
                    @foreach (var item in Model)
                    {
                        /*check if survey is of type open*/
                        if (item.Subject.Category.Survey.status == "Open")
                        {
                            quizSerial++;
                            formSubmitBtn = true;
                            <div class="question-div">
                                <input type="hidden" required="required" name="quizresponse" id="quizresponse"/>
                                <p style="background-color:Lavender;">@quizSerial) @Html.DisplayFor(modelItem => item.question)</p>

                                <div class="container" style="display: flex;margin: 5px">
                                    @foreach (var itemed in item.ResponseType.ResponseDictionary)
                                    {
                                        <div class="form-group" style="margin-left: 15px">
                                            <label class="control-label">@itemed.Value
                                                <input type="radio" name="quize @item.Id" value="@itemed.Key|@item.Id" required="required"/>
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        /*check if survey is of type Closed*/
                        if (item.Subject.Category.Survey.status == "Closed")
                        {
                            //check if user is loged in
                            if (User.Identity.IsAuthenticated)
                            {
                                //check if user has answered the survey question
                                if (!_context.SurveyResponse.Where(x => x.QuestionId == item.Id).Any(x => x.RespondantId == _usermanager.GetUserId(User)))
                                {
                                    quizSerial++;
                                    formSubmitBtn = true;
                                    <div class="question-div">
                                        <input type="hidden" required="required" name="quizresponse" id="quizresponse"/>
                                        <p style="background-color:Lavender;">@quizSerial) @Html.DisplayFor(modelItem => item.question)</p>

                                        <div class="container" style="display: flex;margin: 5px">
                                            @foreach (var itemed in item.ResponseType.ResponseDictionary)
                                            {
                                                <div class="form-group" style="margin-left: 15px">
                                                    <label class="control-label">@itemed.Value
                                                        <input type="radio" name="quize @item.Id" value="@itemed.Key|@item.Id" required="required"/>
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <h3 style="background-color:Lavender;">Survey questions already taken</h3>
                                }

                            }
                            else
                            {
                                <h3 style="background-color:Lavender;">Survey questions require login</h3>
                            }
                        }
                    }
                    @if (formSubmitBtn)
                    {
                        <div class="form-group">
                            <input type="submit" value="Submit Survey" class="btn btn-primary"/>
                        </div>
                    }

            </form>
        </div>
    </div>*@
    <h3>@surveySubject?.Survey?.Name</h3>
    <h3>@surveySubject?.Name </h3>
    if (surveySubject?.OtherProperties != null)
    {
        foreach (var otherProperty in surveySubject?.OtherProperties)
        {
            <label style="font-weight: bolder">@otherProperty.Name</label>
            <span>:</span>
            <span>@otherProperty.Value</span>
        }
    }
    <br/>
    <small style="font-style: italic">(NB: questionnaire marked (<span style="color: red">*</span>) requires a score)</small>
    <h5 style="font-style: italic">@surveySubject?.Description</h5>
    <form asp-controller="SurveyResponses" asp-action="Create" id="SurveyResponses">
    <input type="hidden" name="dynamicSubjectValue" value="@newOtherProperties"/>
    <input type="hidden" name="addAnotherSubjectOnSurveyTake" value="@anotherSubjectOnSurveyTake"/>
    <input type="hidden" name="subjectName" value="@surveySubject?.Name">
    <div class="col-md-12" style="width: 100%!important;">
        @if (surveySubject!.AddAnotherSubjectOnSurveyTake)
        {
            var counter = 0;
            foreach (var subjectValue in surveySubject.DynamicSubjectValue?.Where(c=>c?.SelectValueOptions?.Any() == true))
            {
                counter++;
                var subjectValueSelect = subjectValue?.SelectValueOptions?.Select(c => new SelectListItem
                {
                    Value = c,
                    Text = c
                });
                <label>@subjectValue?.Name</label>
                <input type="hidden" name="dynamicSubjectValue[@counter].Name" value="@subjectValue?.Name"/>
                <select style="width: 20%!important;" name="dynamicSubjectValue[@counter].Value" asp-items="subjectValueSelect" required="required"></select>
            }
        }
    </div>
    
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table border="0" class="table table-striped table-hover table-bordered display">
    <thead style="position: sticky; top: 0;">
    @*<tr style="height: 5px!important;line-height: 2%;">
                <th colspan="2"></th>
                <th colspan="@Model.Take(1).SelectMany(x => x.ResponseType.ResponseDictionary).Count()" style="text-align: center;">Scores</th>
            </tr>*@
    <tr style="height: 5px!important;width: auto !important;">
        <th>SN </th>
        <th >Question</th>
        <th style="width:auto!important"> Scores</th>
        @*@foreach (var item in Model.Take(1).SelectMany(x => x.ResponseType.ResponseDictionary))
                {
                    <th style="width:auto!important">@item.Value</th>
                }*@
    </tr>
    </thead>
    <tbody>
    @{
        var quizSerialTable = 0;
        var formSubmitBtnTable = false;
    }
    @*check if survey is of type open*@
    @if (Model.Any(x => x.Subject.Survey.status == "Open"))
    {
        @foreach (var quiz in Model.GroupBy(c => c.QuestionGroup))
        {
            <tr>
                <td colspan="3" style="text-align: left;font-weight: bolder">@quiz.Key?.Name</td>
            </tr>
            foreach (var question in quiz)
            {
                var required = question?.AnswerRequired == true ? "required" : "";
                quizSerialTable++;
                formSubmitBtnTable = true;
                <tr>
                    <input type="hidden" required="required" name="quizresponse" id="quizresponseTable"/>
                    <td >@quizSerialTable</td>
                    <td style="width:60%">
                        @Html.DisplayFor(modelItem => question.question)
                        @if (question?.AnswerRequired == true)
                        {
                            <span style="color: red">*</span>
                        }
                        else
                        {
                            <small style="font-style: italic">(not required)</small>
                        }
                    </td>
                    <td>
                        @if (question?.ResponseType.DisplayOptionType == DisplayOptionType.RadioButton)
                        {
                            @foreach (var response in question.ResponseType.ResponseDictionary)
                            {
                                <span title="@response.Value">@response.Name</span>
                                <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                <input type="radio" class="tableradio" name="quizResponse[@question.Id].Response" value="@response.Value" @required/>
                            }
                        }
                        @if (question?.ResponseType.DisplayOptionType == DisplayOptionType.DropDown)
                        {
                            var quizResponseName = $"quizResponse[{question.Id}].Response";
                            var responseDictionary = question.ResponseType.ResponseDictionary.Select(v => new SelectListItem
                            {
                                Value = $"{v.Value}",
                                Text = v.Name
                            });
                            <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                            <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                            if (question?.AnswerRequired == true)
                            {
                                <select required name="@quizResponseName" asp-items="@responseDictionary"></select>
                            }
                            else
                            {
                                <select name="@quizResponseName" asp-items="@responseDictionary"></select>
                            }
                        }
                        @if (question?.ResponseType.DisplayOptionType == DisplayOptionType.Input)
                        {
                            @foreach (var response in question.ResponseType.ResponseDictionary)
                            {
                                <span style="text-align: center" title="@response.Value">@response.Name</span>
                                <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                <input type="hidden" class="tableradio" name="quizResponse[@question.Id].Response" value="@response.Value" @required/>
                                <textarea  class="tableradio" name="quizResponse[@question.Id].ResponseText" @required></textarea>
                            }
                        }
                    </td>
                </tr>
            }
        }
    }
    @*check if survey is of type Closed*@
    @if (Model.Any(x => x.Subject.Survey.status == "Closed"))
    {
        //check if user is loged in
        if (User.Identity!.IsAuthenticated)
        {
            @foreach (var quiz in Model.GroupBy(c => c.QuestionGroup))
            {
                <tr>
                    <td colspan="3" style="text-align: left;font-weight: bolder">@quiz.Key?.Name</td>
                </tr>
                foreach (var question in quiz)
                {
                    //check if user has not answered the survey question
                    if (!_context.SurveyResponse.Where(x => x.QuestionId == question.Id).Any(x => x.RespondantId == _usermanager.GetUserId(User)))
                    {
                        var required = question?.AnswerRequired == true ? "required" : "";
                        quizSerialTable++;
                        formSubmitBtnTable = true;
                        <tr>
                            <input type="hidden" required="required" name="quizresponse" id="quizeresponseId"/>
                            <td >@quizSerialTable</td>
                            <td style="width:60%">
                                @Html.DisplayFor(modelItem => question.question)
                                @if (question?.AnswerRequired == true)
                                {
                                    <span style="color: red">*</span>
                                }
                                else
                                {
                                    <small style="font-style: italic">(not required)</small>
                                }
                            </td>
                            <td>
                                @if (question.ResponseType.DisplayOptionType == DisplayOptionType.RadioButton)
                                {
                                    @foreach (var response in question.ResponseType.ResponseDictionary)
                                    {
                                        <span title="@response.Value">@response.Name</span>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                        <input type="radio" class="tableradio" name="quizResponse[@question.Id].Response" value="@response.Value" @required/>
                                    }
                                }
                                @if (question.ResponseType.DisplayOptionType == DisplayOptionType.DropDown)
                                {
                                    var quizResponseName = $"quizResponse[{question.Id}].Response";
                                    var responseDictionary = question.ResponseType.ResponseDictionary.Select(v => new SelectListItem
                                    {
                                        Value = $"{v.Value}",
                                        Text = v.Name
                                    });
                                    <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                    <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                    if (question?.AnswerRequired == true)
                                    {
                                        <select required name="@quizResponseName" asp-items="@responseDictionary"></select>
                                    }
                                    else
                                    {
                                        <select name="@quizResponseName" asp-items="@responseDictionary"></select>
                                    }
                                }
                                @if (question.ResponseType.DisplayOptionType == DisplayOptionType.Input)
                                {
                                    @foreach (var response in question.ResponseType.ResponseDictionary)
                                    {
                                        <span style="text-align: center" title="@response.Value">@response.Name</span>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                        <input type="hidden" class="tableradio" name="quizResponse[@question.Id].Response" value="@response.Value" @required/>
                                        <input class="tableradio" name="quizResponse[@question.Id].ResponseText" @required/>
                                    }
                                }
                            </td>
                        </tr>
                    }
                    else
                    {
                        <h3 style="background-color:Lavender;">Survey questions already taken</h3>
                    }
                }
            }
        }
        else
        {
            <h3 style="background-color:Lavender;">Survey questions require login</h3>
        }
    }
    @*check if survey is of type SelectiveParticipants*@
    @if (Model.Any(x => x.Subject.Survey.status == "SelectiveParticipants"))
    {
        //check if user is loged in
        if (User.Identity!.IsAuthenticated && Model.Any(c => c.Subject.Survey.SurveyParticipants.Any(v => v.ParticipantId == _usermanager.GetUserId(User))))
        {
            @foreach (var quiz in Model.GroupBy(c => c.QuestionGroup))
            {
                <tr>
                    <td colspan="3" style="text-align: left;font-weight: bolder">@quiz.Key?.Name</td>
                </tr>
                foreach (var question in quiz)
                {
                    //check if user has not answered the survey question
                    if (!_context.SurveyResponse.Where(x => x.QuestionId == question.Id).Any(x => x.RespondantId == _usermanager.GetUserId(User)))
                    {
                        var required = question?.AnswerRequired == true ? "required" : "";
                        quizSerialTable++;
                        formSubmitBtnTable = true;
                        <tr>
                            <input type="hidden" required="required" name="quizresponse" id="quizeresponseId"/>
                            <td >@quizSerialTable</td>
                            <td style="width:60%">
                                @Html.DisplayFor(modelItem => question.question)
                                @if (question?.AnswerRequired == true)
                                {
                                    <span style="color: red">*</span>
                                }
                                else
                                {
                                    <small style="font-style: italic">(not required)</small>
                                }
                            </td>
                            <td>
                                @if (question.ResponseType.DisplayOptionType == DisplayOptionType.RadioButton)
                                {
                                    @foreach (var response in question.ResponseType.ResponseDictionary)
                                    {
                                        <span title="@response.Value">@response.Name</span>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                        <input type="radio" class="tableradio" name="quizResponse[@question.Id].Response" value="@response.Value" @required/>
                                    }
                                }
                                @if (question.ResponseType.DisplayOptionType == DisplayOptionType.DropDown)
                                {
                                    var quizResponseName = $"quizResponse[{question.Id}].Response";
                                    var responseDictionary = question.ResponseType.ResponseDictionary.Select(v => new SelectListItem
                                    {
                                        Value = $"{v.Value}",
                                        Text = v.Name
                                    });
                                    <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                    <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                    if (question?.AnswerRequired == true)
                                    {
                                        <select required name="@quizResponseName" asp-items="@responseDictionary"></select>
                                    }
                                    else
                                    {
                                        <select name="@quizResponseName" asp-items="@responseDictionary"></select>
                                    }
                                }
                                @if (question.ResponseType.DisplayOptionType == DisplayOptionType.Input)
                                {
                                    @foreach (var response in question.ResponseType.ResponseDictionary)
                                    {
                                        <span style="text-align: center" title="@response.Value">@response.Name</span>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionId" value="@question.Id" @required/>
                                        <input type="hidden" name="quizResponse[@question.Id].QuestionText" value="@question.question" @required/>
                                        <input type="hidden" class="tableradio" name="quizResponse[@question.Id].Response" value="@response.Value" @required/>
                                        <input class="tableradio" name="quizResponse[@question.Id].ResponseText" @required/>
                                    }
                                }
                            </td>
                        </tr>
                    }
                    else
                    {
                        <h3 style="background-color:Lavender;">Survey questions already taken</h3>
                    }
                }
            }
        }
        else
        {
            <h3 style="background-color:Lavender;">Survey questions require login</h3>
        }
    }

    </tbody>
    </table>
    @if (formSubmitBtnTable)
    {
        <div class="form-group" style="position: fixed;right: 4%;bottom: 11%">
            <input type="submit" value="Submit Survey" class="btn btn-primary"/>
        </div>
    }
    </form>
@section Scripts{
    <script>
        $('form input:radio').on('input', function (e) {
            var quizeresponse = $(this).parent().parent().parent().parent().find("#quizresponse");
            quizeresponse.val($(this).val());
            //console.log(quizeresponse.val())

        })
        $('form input:radio.tableradio').on('input', function (e) {
            var quizeresponseId = $(this).parent().parent().find("#quizresponseTable");
            quizeresponseId.val($(this).val());
            /*console.log($(this).closest("tr").find("#quizresponseTable").val())*/

        })
        var table = $('.table').DataTable({
            fresponsive: true,
            paging: false,
            "pageLength": 50,
            autoWidth: true,
            "ordering": false,
            bFilter: false
        }).columns.adjust();
        new $.fn.dataTable.FixedHeader(table);
        
        //$('#SurveyResponses').submit(function (e) {
        //    e.preventDefault();
        //    table.page( 'next' ).draw( 'page' );
        //    var tbl = table.$('input[id="quizresponseTable"]')
        //    var reqinputs = $(this).find('input[id="quizresponseTable"]')
        //    valideform= true
        //    $.each(tbl, function (id, vals) {
        //        //console.log($(vals).val())
        //        if ($(vals).val() == null || $(vals).val().length <= 0) {
        //            valideform = false
        //        }

        //    })
        //    //console.log(valideform);
        //    //console.log($(this)[0].checkValidity());
        //    if ($(this)[0].checkValidity() && valideform) {
        //        console.log("table ready ")
        //        e.currentTarget.submit();
        //    } else {
        //        alert("please select missing input before submitting the survey")
        //    }
        //})
        //$('#SurveyResponses').on( 'page.dt', function (e, settings) {
        //    var info = table.page.info();
        //    if ($(this)[0].checkValidity()) {
        //        return false;
        //    }
        //    console.log($(this)[0].checkValidity())
        //    $('#pageInfo').html( 'Showing page: '+info.page+' of '+info.pages );
        //});
        //table.on('page.dt', function (e, settings) {
        //    //$('#SurveyResponses').submit();
        //    //e.preventDefault();
        //    //console.log(e)
        //    //if ($('#SurveyResponses')[0].checkValidity() ===false) {
        //    //    //e.preventDefault();
        //    //    return false;
        //    //} else {
        //    //    return true;
        //    //}
        //});
/*$("#SurveyResponses").submit(function(e) {
          e.preventDefault();
          var thisform=this;
          var formDataArray=[];
          var formData = new FormData;
          var formsdata= $('form input:radio').serializeArray();
          $.each(formsdata,function(key,value) {
              formDataArray.push(value.value);
              formsdata.append('array_php_side[]', value.value)
          });
          $("#quizresponse").val((formsdata));
            console.log(($("#quizresponse").val()));
            if ($("#quizresponse").val()!=null) {
                $(thisform).submit();
            }

        })*/
    </script>
}
    //<script src="~/lib/jquery/dist/jquery.js"></script>
}