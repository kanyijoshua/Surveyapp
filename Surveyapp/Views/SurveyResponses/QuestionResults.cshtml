@model IEnumerable<Surveyapp.Models.Question> 
@inject SurveyContext Context

@{
    ViewBag.Title = "Question Result";
    Layout = "_Layout";
   int res=0;
}

<h2>Question Result</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                Question
            </th>
            <th>
                Total Score
            </th> 
            <th>
                Avarage Score
            </th>
            <th>
                Result
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.OrderBy(x=>x.ResponseType))
    {
        var questionResponseSum = Context.SurveyResponse.Where(a => a.QuestionId == item.Id).Sum(x=> int.Parse(x.Response));
        var totalQuestionCountResponse = Context.SurveyResponse.
        Count(x => x.QuestionId ==item.Id)>0?Context.SurveyResponse.Count(x => x.QuestionId ==item.Id):1;
        var avgScore = Math.Round((decimal)questionResponseSum/(decimal)totalQuestionCountResponse,0);
        res = totalQuestionCountResponse;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.question)
            </td>
            <td>
                @questionResponseSum
            </td>
            <td>
                @avgScore
            </td>
            <td>
                @foreach (var scores in Context.ResponseType.Where(x=>x.SubjectId == item.SubjectId).SelectMany(x=>x.ResponseDictionary))
                    {
                        if (avgScore == int.Parse(scores.Key))
                        {
                            <p> @scores.Value</p>
                        }
                    }
            </td>
        </tr>
    }
    </tbody>
</table>
<div align="center" style="background-color:Beige; color:aqua">
Number of responses per question <Strong> @res</Strong>
</div>
 